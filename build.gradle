plugins {
    id 'java'
    id "io.freefair.lombok" version "5.1.1"
    id "io.qameta.allure" version "2.8.1"
}

group 'ru.netology'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

allure {
    autoconfigure = true
    version = "2.13.5" // Allure Version
    useJUnit5 {
        version = "2.13.5" // Allure Version
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
//    jcenter()
}

dependencies {
    testImplementation(group: 'io.qameta.allure', name: 'allure-selenide', version: '2.13.5')
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.1')
    testImplementation(group: 'com.codeborne', name: 'selenide', version: '5.14.0')
    testRuntimeOnly(group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30')
    testImplementation(group: 'org.postgresql', name: 'postgresql', version: '42.1.4')
    testImplementation(group: 'mysql', name: 'mysql-connector-java', version: '8.0.21')
    testImplementation(group: 'commons-dbutils', name: 'commons-dbutils', version: '1.7')
}

test {
    useJUnitPlatform()
    /*
    When you run gradle test -Darg1=smth, you pass system parameter arg1 to the Gradle JVM, not the test JVM where tests are run. It is designed this way to protect tests from side effects.
    If you need to propagate parameters to tests, use something like this
    test {
        systemProperty 'arg1', System.getProperty('arg1')
    }
     */
    // в тестах, вызывая `gradlew test -Dselenide.headless=true` будем передавать этот параметр в JVM (где его подтянет Selenide)
    systemProperty 'selenide.headless', System.getProperty('selenide.headless')
    systemProperty 'db.url', System.getProperty('db.url')
}